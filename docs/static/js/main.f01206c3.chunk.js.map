{"version":3,"sources":["components/HeaderBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","bar","textAlign","HeaderBar","classes","Box","sx","flexGrow","AppBar","className","position","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","variant","component","Button","theme","createTheme","palette","primary","main","secondary","headerText","headerBarStyle","padding","benefitCard","maxWidth","marginBottom","LinearDeterminate","props","percentValue","Math","round","used","total","display","alignItems","width","LinearProgress","value","minWidth","unit","BenefitCard","Card","CardContent","gutterBottom","name","CardActions","App","benefitsDict","monthly","yearly","oneOff","ThemeProvider","Container","Grid","container","spacing","direction","item","md","map","elem","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f01206c3.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\n// ------- Styles -------\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    bar: {\n        textAlign: \"center\"\n    },\n});\n// ----- End Styles -----\n\n// Header Bar copied from https://mui.com/components/app-bar/\nexport default function HeaderBar() {\n    const classes = useStyles();\n    return (\n        <Box sx={{ flexGrow: 1 }}>\n            <AppBar className={classes.bar} position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        size=\"large\"\n                        edge=\"start\"\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                        sx={{ mr: 2 }}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n                        Your Benefits\n                    </Typography>\n                    <Button color=\"inherit\">Login</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    );\n}\n","import * as React from 'react';\nimport '@fontsource/roboto/300.css';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport Box from '@mui/material/Box';\n\n// -------- Images --------\n// import logo from 'assets/logo.svg';\n\n// -------- Components --------\nimport HeaderBar from 'components/HeaderBar';\n\n\n// ------- Styles -------\nimport { createTheme, ThemeProvider, } from '@mui/material/styles';\nimport { makeStyles } from '@mui/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#2E77BB\",\n    },\n    secondary: {\n      main: \"#6CC4EE\",\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  headerText: {\n    textAlign: \"center\"\n  },\n\n  headerBarStyle: {\n    padding: \"50px\"\n  },\n\n  benefitCard: {\n    maxWidth: \"345\",\n    marginBottom: '30px'\n  },\n});\n// ----- End Styles -----\n\nfunction LinearDeterminate(props) {\n  let percentValue = Math.round( (props.used / props.total) * 100 )\n\n  //For an example of the bar auto-updating itself on a timer go: https://mui.com/components/progress/#main-content\n  return (\n    <div>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ width: '100%' }}>\n          <LinearProgress variant=\"determinate\" value={percentValue} />\n        </Box>\n        <Box sx={{ minWidth: 35 }}>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {`${percentValue}%`}\n          </Typography>\n        </Box>\n      </Box>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {`${props.unit}${props.used} out of ${props.unit}${props.total}`}\n      </Typography>\n    </div>\n    \n  );\n}\n\nfunction BenefitCard(props) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.benefitCard}>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\n          {props.name}\n        </Typography>\n        <LinearDeterminate total={props.total} used={props.used} unit={props.unit} />\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Visit Benefit Site</Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nfunction App() {\n  const classes = useStyles();\n\n  //Mapping data like this for such little data with such great variance of content was probably not a good idea... feel free to change how this is handled\n  const benefitsDict = {\n    monthly: [\n      { name: 'Gift', total: 1, used: 0, unit: \"\" },\n      { name: 'Phone bill', total: 1000, used: 700, unit: \"$\" },\n    ],\n    yearly: [\n      { name: 'Training', total: 100000, used: 8000, unit: \"$\" },\n      { name: 'Fitness', total: 500, used: 180, unit: \"$\" },\n      { name: 'PTO Days', total: 10, used: 5, unit: \"\" },\n    ],\n    oneOff: [\n      { name: 'Healthcare', total: 1, used: 1, unit: \"\" }\n    ]\n  }\n  \n  return (\n    <ThemeProvider theme={theme}>\n      <HeaderBar className={classes.headerBarStyle}/>\n\n      <Container >\n        <Typography variant=\"h1\" className={classes.headerText} gutterBottom>\n          Benefits\n        </Typography>\n\n      <Grid container spacing={4} direction=\"row\" >\n        <Grid item md={3}>\n          <Typography variant=\"h3\" gutterBottom>\n            Yearly\n          </Typography>\n          {benefitsDict.yearly.map(elem => (\n            <Grid item key={benefitsDict.yearly.indexOf(elem)}>\n              <BenefitCard name={`${elem.name}`} total={`${elem.total}`} used={`${elem.used}`} unit={`${elem.unit}`}/>\n            </Grid>\n          ))}\n        </Grid>\n\n        <Grid item md={3}>\n          <Typography variant=\"h3\" gutterBottom>\n          Monthly\n          </Typography>\n          {benefitsDict.monthly.map(elem => (\n            <Grid item key={benefitsDict.yearly.indexOf(elem)}>\n              <BenefitCard name={`${elem.name}`} total={`${elem.total}`} used={`${elem.used}`} unit={`${elem.unit}`}/>\n            </Grid>\n          ))}\n        </Grid>\n        \n        <Grid item md={3}>\n          <Typography variant=\"h3\" gutterBottom>\n          One-Off\n          </Typography>\n          {benefitsDict.oneOff.map(elem => (\n            <Grid item key={benefitsDict.yearly.indexOf(elem)}>\n              <BenefitCard name={`${elem.name}`} total={`${elem.total}`} used={`${elem.used}`} unit={`${elem.unit}`}/>\n            </Grid>\n          ))}\n        </Grid>\n          \n      </Grid>\n    </Container>\n      \n\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}